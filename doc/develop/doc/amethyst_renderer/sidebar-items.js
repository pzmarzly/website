initSidebarItems({"enum":[["Color","Type for color attribute of vertex"],["DepthMode",""],["ElementState",""],["Event",""],["ImageError","Error."],["Light","A light source."],["MeshData","Mesh data for loading"],["MouseButton",""],["Normal","Type for texture coord attribute of vertex"],["Position","Type for position attribute of vertex"],["Projection","The projection mode of a `Camera`."],["Tangent","Type for tangent attribute of vertex"],["TexCoord","Type for texture coord attribute of vertex"],["TextureData","Texture data for loading"],["VirtualKeyCode",""],["WindowEvent",""]],"fn":[["build_mesh_with_combo","Build Mesh with vertex buffer combination"],["create_mesh_asset","Create mesh"],["create_texture_asset","Create a texture asset."],["vertex_data","Construct new vertex data from raw data and vertex format"]],"mod":[["error","Renderer error types."],["pipe","Renderer pipeline configuration."]],"struct":[["ActiveCamera","Active camera resource, used by the renderer to choose which camera to get the view matrix from. If no active camera is found, the first camera will be used as a fallback."],["AmbientColor","The ambient color of a scene"],["BmpFormat","Allows loading of BMP files."],["Camera","Camera struct."],["ColorBuffer","Target color buffer."],["ComboMeshCreator","Mesh creator for `VertexBufferCombination`."],["Data",""],["DepthBuffer","Target depth-stencil buffer."],["DirectionalLight","A directional light source."],["DisplayConfig","Structure for holding the renderer configuration."],["DrawFlat","Draw mesh without lighting `V` is `VertexFormat`"],["DrawFlatSeparate","Draw mesh without lighting"],["DrawPbm","Draw mesh with physically based lighting `V` is `VertexFormat`"],["DrawPbmSeparate","Draw mesh with physically based lighting"],["DrawShaded","Draw mesh with simple lighting technique `V` is `VertexFormat`"],["DrawShadedSeparate","Draw mesh with simple lighting technique"],["Effect",""],["EffectBuilder",""],["ImageData","ImageData provided by formats, can be interpreted as a texture."],["Init","FIXME: Cannot `Deserialize` for some reason."],["JpgFormat","Allows loading of jpg or jpeg files."],["KeyboardInput",""],["Material","Material struct."],["MaterialDefaults","A resource providing default textures for `Material`. These will be be used by the renderer in case a texture handle points to a texture which is not loaded already. Additionally, you can use it to fill up the fields of `Material` you don't want to specify."],["Mesh","Represents a polygonal mesh."],["Meta",""],["NewEffect",""],["ObjFormat","Allows loading from Wavefront files see: https://en.wikipedia.org/wiki/Wavefront_.obj_file"],["Pipeline","Defines how the rendering pipeline should be configured."],["PipelineBuilder","Constructs a new pipeline with the given render targets and layers."],["PngFormat","Allows loading of PNG files."],["PointLight","A point light source."],["PosColor","Vertex format with position and RGBA8 color attributes."],["PosNormTangTex","Vertex format with position, normal, and UV texture coordinate attributes."],["PosNormTex","Vertex format with position, normal, and UV texture coordinate attributes."],["PosTex","Vertex format with position and UV texture coordinate attributes."],["RenderBundle","Rendering bundle"],["RenderSystem","Rendering system."],["Renderer","Generic renderer."],["Rgba","An RGBA color value."],["ScreenDimensions","World resource that stores screen dimensions."],["Separate","Vertex format for attributes in separate buffers"],["SpotLight","A spot light source."],["Stage","A stage in the rendering pipeline."],["StageBuilder","Constructs a new rendering stage."],["SunLight","A realistic disk-shaped sun light source."],["Target","A render target."],["TargetBuilder","Builds new render targets."],["Texture","Handle to a GPU texture resource."],["TextureBuilder","Builds new textures."],["TextureMetadata","Texture metadata, used while loading"],["VertexBuffer","Raw buffer with its attributes"],["WindowMessages","This specs resource with id 0 permits sending commands to the renderer internal window."]],"trait":[["Attribute","Trait for vertex attributes to implement"],["MeshCreator","Trait used by the asset processor to convert any user supplied mesh representation into an actual `Mesh`."],["PipelineBuild",""],["PipelineData","The data requested from the `specs::World` by the Pipeline."],["PolyPipeline","Trait used for the pipeline."],["PolyStage","A stage in the rendering.  Contains multiple passes."],["PolyStages",""],["Query","Allows to query specific `Attribute`s of `VertexFormat`"],["VertexFormat","Trait implemented by all valid vertex formats."],["With","Trait implemented by all valid vertex formats for each field"]],"type":[["AttributeFormat","Format for vertex attribute"],["Attributes","Slice of attributes"],["Encoder","Command buffer encoder type."],["Factory","Graphics factory type."],["MeshHandle","A handle to a mesh."],["PipelineState","Statically-typed pipeline state object (PSO)."],["Resources","Graphics resource type."],["Targets","A hash map containing named render targets."],["TextureHandle","A handle to a `Texture` asset."],["VertexBufferCombination","Vertex combo"]]});